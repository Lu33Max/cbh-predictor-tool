{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Desktop\\\\new-website\\\\cbh-predictor-app\\\\src\\\\components\\\\screens\\\\tableScreen\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport Table from \"./table/table\";\nimport FileUploadForm from \"./forms/fileUploadForm\";\nimport CreateEntryForm from \"./forms/createEntryForm\";\nimport UpdateEntryForm from \"./forms/updateEntryForm\";\nimport Constants from \"../../../utilities/Constants\";\nimport styles from \"./index.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableScreen = () => {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const [activeTable, setActiveTable] = useState('');\n  const [showFileUpload, setShowFileUpload] = useState(false);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [entryToUpdate, setEntryToUpdate] = useState(null);\n  const [rows, setRows] = useState(100);\n  const handleRowChange = e => {\n    setRows(e.target.value);\n    getAllEntries(activeTable);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.body,\n    children: [activeTable === '' && showFileUpload === false && showCreateForm === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Bing Search Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button_black,\n          children: \"Graphical Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getAllEntries('Bing'),\n          className: styles.button_green,\n          children: \"Show Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowFileUpload(true);\n            setActiveTable('Bing');\n          },\n          className: styles.button_gray,\n          children: \"Upload Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportToExcel('Bing'),\n          className: styles.button_gray,\n          children: \"Export to Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Google Search Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button_black,\n          children: \"Graphical Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getAllEntries('Google'),\n          className: styles.button_green,\n          children: \"Show Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowFileUpload(true);\n            setActiveTable('Google');\n          },\n          className: styles.button_gray,\n          children: \"Upload Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportToExcel('Google'),\n          className: styles.button_gray,\n          children: \"Export to Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Lead Entries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button_black,\n          children: \"Graphical Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getAllEntries('Lead'),\n          className: styles.button_green,\n          children: \"Show Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowFileUpload(true);\n            setActiveTable('Lead');\n          },\n          className: styles.button_gray,\n          children: \"Upload Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportToExcel('Lead'),\n          className: styles.button_gray,\n          children: \"Export to Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Order Entries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button_black,\n          children: \"Graphical Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getAllEntries('Order'),\n          className: styles.button_green,\n          children: \"Show Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowFileUpload(true);\n            setActiveTable('Order');\n          },\n          className: styles.button_gray,\n          children: \"Upload Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportToExcel('Order'),\n          className: styles.button_gray,\n          children: \"Export to Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), showFileUpload === true && /*#__PURE__*/_jsxDEV(FileUploadForm, {\n      onFileUploaded: onFileUploaded,\n      table: activeTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 44\n    }, this), showCreateForm === true && /*#__PURE__*/_jsxDEV(CreateEntryForm, {\n      onEntryCreated: onEntryCreated,\n      table: activeTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 44\n    }, this), activeTable !== '' && showFileUpload === false && showCreateForm === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTable(''),\n        className: styles.button_backarrow,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCreateForm(true),\n        className: styles.button_newentry,\n        children: \"Create New Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteAllEntries(),\n        className: styles.button_deleteentries,\n        children: \"Delete All Entries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), Object.keys(entries).length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Please upload a table to view its content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this), Object.keys(entries).length !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [entryToUpdate === null && /*#__PURE__*/_jsxDEV(\"div\", {\n          styles: styles.tableview,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            classname: styles.row,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: styles.rowInput,\n              value: rows,\n              name: \"rows\",\n              type: \"text\",\n              onChange: handleRowChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 41\n            }, this), \"  Rows\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.container,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              data: entries,\n              rowsPerPage: rows,\n              type: activeTable,\n              getAllEntries: getAllEntries,\n              deleteEntry: deleteSingleEntry\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }, this), entryToUpdate !== null && /*#__PURE__*/_jsxDEV(UpdateEntryForm, {\n          entry: entryToUpdate,\n          table: props.type,\n          onEntryUpdated: onEntryUpdated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n\n  //// INTERNAL METHODS ////\n  function onFileUploaded(created) {\n    if (created) alert(`Sucessfully uploaded the file contents to \"${activeTable}\" Table.`);\n    setShowFileUpload(false);\n    setActiveTable('');\n  }\n  function onEntryCreated(created) {\n    if (created !== null) alert(`Entry succesfully created. After clicking OK, your new Entry will show up in the table below.`);\n    setShowCreateForm(false);\n    getAllEntries(activeTable);\n  }\n  function updateEntryToUpdate(entry) {\n    setEntryToUpdate();\n  }\n\n  //// SERVER REQUESTS ////\n  function getAllEntries(table) {\n    setActiveTable(table);\n    var url;\n    switch (table) {\n      case 'Bing':\n        url = Constants.API_URL_BING_ENTRIES;\n        break;\n      case 'Google':\n        url = Constants.API_URL_GOOGLE_ENTRIES;\n        break;\n      case 'Lead':\n        url = Constants.API_URL_LEAD_ENTRIES;\n        break;\n      case 'Order':\n        url = Constants.API_URL_ORDER_ENTRIES;\n        break;\n      default:\n        alert(`Error: Table with name \"${table}\" does not exist`);\n        return;\n    }\n    fetch(url, {\n      method: 'GET'\n    }).then(response => response.json()).then(entriesFromServer => {\n      setEntries(entriesFromServer);\n    }).catch(error => {\n      console.log(error);\n      alert(error);\n    });\n  }\n  function deleteAllEntries() {\n    var url;\n    switch (activeTable) {\n      case 'Bing':\n        url = Constants.API_URL_BING_ENTRIES;\n        break;\n      case 'Google':\n        url = Constants.API_URL_GOOGLE_ENTRIES;\n        break;\n      case 'Lead':\n        url = Constants.API_URL_LEAD_ENTRIES;\n        break;\n      case 'Order':\n        url = Constants.API_URL_ORDER_ENTRIES;\n        break;\n      default:\n        alert(`Error: Table with name \"${activeTable}\" does not exist`);\n        return;\n    }\n    fetch(url, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(responseFromServer => {\n      console.log(responseFromServer);\n      alert(`Sucessfully deleted Entries from \"${activeTable}\" Table.`);\n      getAllEntries(activeTable);\n    }).catch(error => {\n      console.log(error);\n      alert(error);\n    });\n  }\n  function deleteSingleEntry(id) {\n    var url;\n    switch (activeTable) {\n      case 'Bing':\n        url = `${Constants.API_URL_BING_ENTRIES}/${id}`;\n        break;\n      case 'Google':\n        url = `${Constants.API_URL_GOOGLE_ENTRIES}/${id}`;\n        break;\n      case 'Lead':\n        url = `${Constants.API_URL_LEAD_ENTRIES}/${id}`;\n        break;\n      case 'Order':\n        url = `${Constants.API_URL_ORDER_ENTRIES}/${id}`;\n        break;\n      default:\n        alert(`Error: Table with name \"${activeTable}\" does not exist`);\n        return;\n    }\n    fetch(url, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(responseFromServer => {\n      console.log(responseFromServer);\n    }).catch(error => {\n      console.log(error);\n      alert(error);\n    });\n    alert('Entry successfully deleted. After clicking OK, look at the table below to see your Entry disappear.');\n    getAllEntries(activeTable);\n  }\n  function exportToExcel(table) {\n    var base;\n    switch (table) {\n      case 'Bing':\n        base = Constants.API_URL_BING_ENTRIES;\n        break;\n      case 'Google':\n        base = Constants.API_URL_GOOGLE_ENTRIES;\n        break;\n      case 'Lead':\n        base = Constants.API_URL_LEAD_ENTRIES;\n        break;\n      case 'Order':\n        base = Constants.API_URL_ORDER_ENTRIES;\n        break;\n      default:\n        alert(`Error: Table with name \"${table}\" does not exist`);\n        return;\n    }\n    let instance = axios.create({\n      baseURL: base\n    });\n    let options = {\n      url: 'ExportToExcel',\n      method: 'GET',\n      responseType: 'blob'\n    };\n    return instance.request(options).then(response => {\n      let filename = response.headers['content-disposition'].split(';').find(n => n.includes('filename=')).replace('filename=', '').trim();\n      let url = window.URL.createObjectURL(new Blob([response.data]));\n      saveAs(url, filename);\n    });\n  }\n};\n_s(TableScreen, \"YhpZZvYPRr94tAzRxdpHwvpn2Cc=\");\n_c = TableScreen;\nexport default TableScreen;\nvar _c;\n$RefreshReg$(_c, \"TableScreen\");","map":{"version":3,"names":["useState","axios","saveAs","Table","FileUploadForm","CreateEntryForm","UpdateEntryForm","Constants","styles","TableScreen","entries","setEntries","activeTable","setActiveTable","showFileUpload","setShowFileUpload","showCreateForm","setShowCreateForm","entryToUpdate","setEntryToUpdate","rows","setRows","handleRowChange","e","target","value","getAllEntries","body","button_black","button_green","button_gray","exportToExcel","table","onFileUploaded","onEntryCreated","button_backarrow","button_newentry","deleteAllEntries","button_deleteentries","Object","keys","length","tableview","row","rowInput","container","deleteSingleEntry","props","type","onEntryUpdated","created","alert","updateEntryToUpdate","entry","url","API_URL_BING_ENTRIES","API_URL_GOOGLE_ENTRIES","API_URL_LEAD_ENTRIES","API_URL_ORDER_ENTRIES","fetch","method","then","response","json","entriesFromServer","catch","error","console","log","responseFromServer","id","base","instance","create","baseURL","options","responseType","request","filename","headers","split","find","n","includes","replace","trim","window","URL","createObjectURL","Blob","data"],"sources":["C:/Users/lucas/Desktop/new-website/cbh-predictor-app/src/components/screens/tableScreen/index.jsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport axios from \"axios\";\r\nimport { saveAs } from \"file-saver\";\r\nimport Table from \"./table/table\"\r\nimport FileUploadForm from \"./forms/fileUploadForm\";\r\nimport CreateEntryForm from \"./forms/createEntryForm\";\r\nimport UpdateEntryForm from \"./forms/updateEntryForm\";\r\nimport Constants from \"../../../utilities/Constants\";\r\nimport styles from \"./index.module.css\"\r\n\r\nconst TableScreen = () => {\r\n    const [entries, setEntries] = useState([])\r\n    const [activeTable, setActiveTable] = useState('')\r\n    const [showFileUpload, setShowFileUpload] = useState(false)\r\n    const [showCreateForm, setShowCreateForm] = useState(false)\r\n    const [entryToUpdate, setEntryToUpdate ] = useState(null)\r\n    const [rows, setRows] = useState(100)\r\n    \r\n    const handleRowChange = (e) => {\r\n        setRows(e.target.value)\r\n        getAllEntries(activeTable)\r\n    };\r\n\r\n    return(\r\n        <div className={styles.body}>\r\n            {(activeTable === '' && showFileUpload === false && showCreateForm === false) && (\r\n                <div>\r\n                    <div>\r\n                        <h3>Bing Search Terms</h3>\r\n                        <button className={styles.button_black}>Graphical Analysis</button>\r\n                        <button onClick={() => getAllEntries('Bing')} className={styles.button_green}>Show Table</button>\r\n                        <button onClick={() => {setShowFileUpload(true); setActiveTable('Bing');}} className={styles.button_gray}>Upload Excel File</button>\r\n                        <button onClick={() => exportToExcel('Bing')} className={styles.button_gray}>Export to Excel File</button>\r\n                    </div>\r\n                    <div className={styles.table}>\r\n                        <h3>Google Search Terms</h3>\r\n                        <button className={styles.button_black}>Graphical Analysis</button>\r\n                        <button onClick={() => getAllEntries('Google')} className={styles.button_green}>Show Table</button>\r\n                        <button onClick={() => {setShowFileUpload(true); setActiveTable('Google');}} className={styles.button_gray}>Upload Excel File</button>\r\n                        <button onClick={() => exportToExcel('Google')} className={styles.button_gray}>Export to Excel File</button>\r\n                    </div>\r\n                    <div className={styles.table}>\r\n                        <h3>Lead Entries</h3>\r\n                        <button className={styles.button_black}>Graphical Analysis</button>\r\n                        <button onClick={() => getAllEntries('Lead')} className={styles.button_green}>Show Table</button>\r\n                        <button onClick={() => {setShowFileUpload(true); setActiveTable('Lead');}} className={styles.button_gray}>Upload Excel File</button>\r\n                        <button onClick={() => exportToExcel('Lead')} className={styles.button_gray}>Export to Excel File</button>\r\n                    </div>\r\n                    <div className={styles.table}>\r\n                        <h3>Order Entries</h3>\r\n                        <button className={styles.button_black}>Graphical Analysis</button>\r\n                        <button onClick={() => getAllEntries('Order')} className={styles.button_green}>Show Table</button>\r\n                        <button onClick={() => {setShowFileUpload(true); setActiveTable('Order');}} className={styles.button_gray}>Upload Excel File</button>\r\n                        <button onClick={() => exportToExcel('Order')} className={styles.button_gray}>Export to Excel File</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {(showFileUpload === true) && (<FileUploadForm onFileUploaded={onFileUploaded} table={activeTable}/>)}\r\n            {(showCreateForm === true) && (<CreateEntryForm onEntryCreated={onEntryCreated} table={activeTable}/> )}\r\n            {(activeTable !== '' && showFileUpload === false && showCreateForm === false) && (\r\n                <div>\r\n                    <button onClick={() => setActiveTable('')} className={styles.button_backarrow}>&#60;</button>\r\n                    <button onClick={() => setShowCreateForm(true)} className={styles.button_newentry}>Create New Entry</button>\r\n                    <button onClick={() => deleteAllEntries()} className={styles.button_deleteentries}>Delete All Entries</button>\r\n                    {(Object.keys(entries).length === 0) && (\r\n                        <div>\r\n                            Please upload a table to view its content\r\n                        </div>\r\n                    )}\r\n                    {(Object.keys(entries).length !== 0) && (\r\n                        <>\r\n                            {(entryToUpdate === null) && (\r\n                                <div styles={styles.tableview}>\r\n                                    <div classname={styles.row}>\r\n                                        <input className={styles.rowInput} value={rows} name=\"rows\" type=\"text\" onChange={handleRowChange}/>  Rows\r\n                                    </div>\r\n                                    <div className={styles.container}>\r\n                                        <Table data={entries} rowsPerPage={rows} type={activeTable} getAllEntries={getAllEntries} deleteEntry={deleteSingleEntry}/>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            {(entryToUpdate !== null) && <UpdateEntryForm entry={entryToUpdate} table={props.type} onEntryUpdated={onEntryUpdated}/>}\r\n                        </>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n    //// INTERNAL METHODS ////\r\n    function onFileUploaded(created){\r\n        if(created) alert(`Sucessfully uploaded the file contents to \"${activeTable}\" Table.`)\r\n        setShowFileUpload(false)\r\n        setActiveTable('')\r\n    }\r\n    function onEntryCreated(created){\r\n        if (created !== null) alert(`Entry succesfully created. After clicking OK, your new Entry will show up in the table below.`);\r\n        setShowCreateForm(false)\r\n        getAllEntries(activeTable);\r\n    }\r\n    function updateEntryToUpdate(entry){\r\n        setEntryToUpdate()\r\n    }\r\n\r\n    //// SERVER REQUESTS ////\r\n    function getAllEntries(table){\r\n        setActiveTable(table);\r\n        var url;\r\n  \r\n        switch (table) {\r\n        case 'Bing':\r\n            url = Constants.API_URL_BING_ENTRIES;\r\n            break;\r\n        case 'Google':\r\n            url = Constants.API_URL_GOOGLE_ENTRIES;\r\n            break;\r\n        case 'Lead':\r\n            url = Constants.API_URL_LEAD_ENTRIES;\r\n            break;\r\n        case 'Order':\r\n            url = Constants.API_URL_ORDER_ENTRIES;\r\n            break;\r\n        default:\r\n            alert(`Error: Table with name \"${table}\" does not exist`)\r\n            return;\r\n        }\r\n      \r\n        fetch(url, {\r\n          method: 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(entriesFromServer => {\r\n          setEntries(entriesFromServer);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          alert(error);\r\n        });\r\n    }\r\n\r\n    function deleteAllEntries(){\r\n        var url;\r\n    \r\n        switch (activeTable) {\r\n          case 'Bing':\r\n            url = Constants.API_URL_BING_ENTRIES;\r\n            break;\r\n          case 'Google':\r\n            url = Constants.API_URL_GOOGLE_ENTRIES;\r\n            break;\r\n          case 'Lead':\r\n            url = Constants.API_URL_LEAD_ENTRIES;\r\n            break;\r\n          case 'Order':\r\n            url = Constants.API_URL_ORDER_ENTRIES;\r\n            break;\r\n          default:\r\n            alert(`Error: Table with name \"${activeTable}\" does not exist`)\r\n            return;\r\n        }\r\n    \r\n        fetch(url, {\r\n          method: 'DELETE'\r\n        })\r\n        .then(response => response.json())\r\n        .then(responseFromServer => {\r\n          console.log(responseFromServer);\r\n          alert(`Sucessfully deleted Entries from \"${activeTable}\" Table.`);\r\n          getAllEntries(activeTable)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          alert(error);\r\n        });\r\n    }\r\n\r\n    function deleteSingleEntry(id){\r\n        var url;\r\n\r\n        switch (activeTable) {\r\n        case 'Bing':\r\n            url = `${Constants.API_URL_BING_ENTRIES}/${id}`;\r\n            break;\r\n        case 'Google':\r\n            url = `${Constants.API_URL_GOOGLE_ENTRIES}/${id}`;\r\n            break;\r\n        case 'Lead':\r\n            url = `${Constants.API_URL_LEAD_ENTRIES}/${id}`;\r\n            break;\r\n        case 'Order':\r\n            url = `${Constants.API_URL_ORDER_ENTRIES}/${id}`;\r\n            break;\r\n        default:\r\n            alert(`Error: Table with name \"${activeTable}\" does not exist`)\r\n            return;\r\n        }\r\n\r\n        fetch(url, {\r\n            method: 'DELETE'\r\n        })\r\n        .then(response => response.json())\r\n        .then(responseFromServer => {\r\n            console.log(responseFromServer);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            alert(error);\r\n        });\r\n\r\n        alert('Entry successfully deleted. After clicking OK, look at the table below to see your Entry disappear.');\r\n        getAllEntries(activeTable);\r\n    }\r\n\r\n    function exportToExcel(table) {\r\n        var base;\r\n\r\n        switch (table) {\r\n        case 'Bing':\r\n            base = Constants.API_URL_BING_ENTRIES;\r\n            break;\r\n        case 'Google':\r\n            base = Constants.API_URL_GOOGLE_ENTRIES;\r\n            break;\r\n        case 'Lead':\r\n            base = Constants.API_URL_LEAD_ENTRIES;\r\n            break;\r\n        case 'Order':\r\n            base = Constants.API_URL_ORDER_ENTRIES;\r\n            break;\r\n        default:\r\n            alert(`Error: Table with name \"${table}\" does not exist`)\r\n            return;\r\n        }\r\n\r\n        let instance = axios.create({  baseURL: base });  \r\n        let options = { \r\n          url: 'ExportToExcel',\r\n          method: 'GET',\r\n          responseType: 'blob'\r\n        };\r\n        return instance.request(options)\r\n          .then(response => { \r\n            let filename = response.headers['content-disposition']\r\n              .split(';')\r\n              .find((n) => n.includes('filename='))\r\n              .replace('filename=', '')\r\n              .trim();      \r\n            let url = window.URL\r\n              .createObjectURL(new Blob([response.data]));     \r\n            saveAs(url, filename);    \r\n        });\r\n    }\r\n}\r\n\r\nexport default TableScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}