{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Desktop\\\\new-website\\\\cbh-predictor-app\\\\src\\\\components\\\\screens\\\\tableScreen\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Table from \"./bingTable\";\nimport Constants from \"../../../utilities/Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableScreen = () => {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const [activeTable, setActiveTable] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [activeTable === '' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => GetAllEntries('Bing'),\n        className: \"btn btn-dark btn-lg w-25 h-100\",\n        children: \"Bing Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => GetAllEntries('Google'),\n        className: \"btn btn-dark btn-lg w-25 h-100\",\n        children: \"Google Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => GetAllEntries('Lead'),\n        className: \"btn btn-dark btn-lg w-25 h-100\",\n        children: \"Lead Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => GetAllEntries('Order'),\n        className: \"btn btn-dark btn-lg w-25 h-100\",\n        children: \"Bing Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this), activeTable !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTable(''),\n        className: \"btn btn-dark btn-lg w-25 h-100\",\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        data: entries,\n        rowsPerPage: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n  function GetAllEntries(table) {\n    setActiveTable(table);\n    var url;\n    switch (table) {\n      case 'Bing':\n        url = Constants.API_URL_BING_ENTRIES;\n        break;\n      case 'Google':\n        url = Constants.API_URL_GOOGLE_ENTRIES;\n        break;\n      case 'Lead':\n        url = Constants.API_URL_LEAD_ENTRIES;\n        break;\n      case 'Order':\n        url = Constants.API_URL_ORDER_ENTRIES;\n        break;\n      default:\n        alert(`Error: Table with name \"${table}\" does not exist`);\n        return;\n    }\n    fetch(url, {\n      method: 'GET'\n    }).then(response => response.json()).then(entriesFromServer => {\n      setEntries(entriesFromServer);\n    }).catch(error => {\n      console.log(error);\n      alert(error);\n    });\n  }\n};\n_s(TableScreen, \"hLskKQGK6LpFrv3V62AJ4N7RioU=\");\n_c = TableScreen;\nexport default TableScreen;\nvar _c;\n$RefreshReg$(_c, \"TableScreen\");","map":{"version":3,"names":["useState","Table","Constants","TableScreen","entries","setEntries","activeTable","setActiveTable","GetAllEntries","table","url","API_URL_BING_ENTRIES","API_URL_GOOGLE_ENTRIES","API_URL_LEAD_ENTRIES","API_URL_ORDER_ENTRIES","alert","fetch","method","then","response","json","entriesFromServer","catch","error","console","log"],"sources":["C:/Users/lucas/Desktop/new-website/cbh-predictor-app/src/components/screens/tableScreen/index.jsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport Table from \"./bingTable\"\r\nimport Constants from \"../../../utilities/Constants\";\r\n\r\nconst TableScreen = () => {\r\n    const [entries, setEntries] = useState([])\r\n    const [activeTable, setActiveTable] = useState('')\r\n\r\n    return(\r\n        <>\r\n            {(activeTable === '') && (\r\n                <div className=\"row-sm\">\r\n                    <button onClick={() => GetAllEntries('Bing')} className=\"btn btn-dark btn-lg w-25 h-100\">Bing Table</button>\r\n                    <button onClick={() => GetAllEntries('Google')} className=\"btn btn-dark btn-lg w-25 h-100\">Google Table</button>\r\n                    <button onClick={() => GetAllEntries('Lead')} className=\"btn btn-dark btn-lg w-25 h-100\">Lead Table</button>\r\n                    <button onClick={() => GetAllEntries('Order')} className=\"btn btn-dark btn-lg w-25 h-100\">Bing Table</button>\r\n                </div>\r\n            )}\r\n            {(activeTable !== '') && (\r\n                <div>\r\n                    <button onClick={() => setActiveTable('')} className=\"btn btn-dark btn-lg w-25 h-100\">&#60;</button>\r\n                    <Table data={entries} rowsPerPage={100}/>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n\r\n    function GetAllEntries(table) {\r\n        setActiveTable(table);\r\n        var url;\r\n  \r\n        switch (table) {\r\n        case 'Bing':\r\n            url = Constants.API_URL_BING_ENTRIES;\r\n            break;\r\n        case 'Google':\r\n            url = Constants.API_URL_GOOGLE_ENTRIES;\r\n            break;\r\n        case 'Lead':\r\n            url = Constants.API_URL_LEAD_ENTRIES;\r\n            break;\r\n        case 'Order':\r\n            url = Constants.API_URL_ORDER_ENTRIES;\r\n            break;\r\n        default:\r\n            alert(`Error: Table with name \"${table}\" does not exist`)\r\n            return;\r\n        }\r\n      \r\n        fetch(url, {\r\n          method: 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(entriesFromServer => {\r\n          setEntries(entriesFromServer);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          alert(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport default TableScreen"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,SAAS,MAAM,8BAA8B;AAAC;AAAA;AAErD,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElD,oBACI;IAAA,WACMM,WAAW,KAAK,EAAE,iBAChB;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACnB;QAAQ,OAAO,EAAE,MAAME,aAAa,CAAC,MAAM,CAAE;QAAC,SAAS,EAAC,gCAAgC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eAC5G;QAAQ,OAAO,EAAE,MAAMA,aAAa,CAAC,QAAQ,CAAE;QAAC,SAAS,EAAC,gCAAgC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB,eAChH;QAAQ,OAAO,EAAE,MAAMA,aAAa,CAAC,MAAM,CAAE;QAAC,SAAS,EAAC,gCAAgC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eAC5G;QAAQ,OAAO,EAAE,MAAMA,aAAa,CAAC,OAAO,CAAE;QAAC,SAAS,EAAC,gCAAgC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEpH,EACCF,WAAW,KAAK,EAAE,iBAChB;MAAA,wBACI;QAAQ,OAAO,EAAE,MAAMC,cAAc,CAAC,EAAE,CAAE;QAAC,SAAS,EAAC,gCAAgC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe,eACpG,QAAC,KAAK;QAAC,IAAI,EAAEH,OAAQ;QAAC,WAAW,EAAE;MAAI;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAEhD;EAAA,gBACF;EAGP,SAASI,aAAa,CAACC,KAAK,EAAE;IAC1BF,cAAc,CAACE,KAAK,CAAC;IACrB,IAAIC,GAAG;IAEP,QAAQD,KAAK;MACb,KAAK,MAAM;QACPC,GAAG,GAAGR,SAAS,CAACS,oBAAoB;QACpC;MACJ,KAAK,QAAQ;QACTD,GAAG,GAAGR,SAAS,CAACU,sBAAsB;QACtC;MACJ,KAAK,MAAM;QACPF,GAAG,GAAGR,SAAS,CAACW,oBAAoB;QACpC;MACJ,KAAK,OAAO;QACRH,GAAG,GAAGR,SAAS,CAACY,qBAAqB;QACrC;MACJ;QACIC,KAAK,CAAE,2BAA0BN,KAAM,kBAAiB,CAAC;QACzD;IAAO;IAGXO,KAAK,CAACN,GAAG,EAAE;MACTO,MAAM,EAAE;IACV,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,iBAAiB,IAAI;MACzBhB,UAAU,CAACgB,iBAAiB,CAAC;IAC/B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBR,KAAK,CAACQ,KAAK,CAAC;IACd,CAAC,CAAC;EACN;AACJ,CAAC;AAAA,GAzDKpB,WAAW;AAAA,KAAXA,WAAW;AA2DjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}