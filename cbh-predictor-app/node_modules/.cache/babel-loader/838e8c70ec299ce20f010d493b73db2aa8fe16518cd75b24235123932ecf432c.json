{"ast":null,"code":"var _jsxFileName = \"G:\\\\WW2\\\\cbh-predictor\\\\cbh-predictor-app\\\\src\\\\components\\\\screens\\\\chartScreen\\\\orderGraphs.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { PieChart } from \"./charts/pieChart\";\nimport Constants from \"../../../utilities/Constants\";\nimport styles from \"./graphs.module.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar primaryScheme = ['#5fc431', '#71d055', '#83dc73', '#96e890', '#abf4ab', '#c0ffc6', '#a1e5ad', '#82cc96', '#62b37f', '#429a6a', '#188255', '#429a6a', '#62b37f', '#82cc96', '#a1e5ad', '#c0ffc6', '#abf4ab', '#96e890', '#83dc73', '#71d055'];\n\n//// MAPPING FUNCTIONS ////\nfunction getMatrices(entries, minImpr) {\n  const data = [];\n  var serum = 10;\n  var K3EDTA = 0;\n  var EDTA = 10;\n  entries.map(function (entry) {\n    if (entry.matrix == \"serum\") {\n      serum = serum + 1;\n    }\n    // switch(entries.matrix) {\n    //     case \"serum\":\n    //         serum++;\n    //         return\n    //     case \"K3EDTA plasma\":\n    //         K3EDTA = K3EDTA + 1;\n    //         return\n    //     case \"EDTA plasma\":\n    //         EDTA = EDTA + 1;\n    //         return\n    //     default:\n    //         return\n    // }\n  });\n\n  data.push({\n    id: \"serum\",\n    value: serum\n  });\n  data.push({\n    id: \"K3EDTA plasma\",\n    value: K3EDTA\n  });\n  data.push({\n    id: \"EDTA plasma\",\n    value: EDTA\n  });\n  return data;\n}\n\n//// RENDER VIEW ////\nconst OrderChart = () => {\n  _s();\n  const [minImpr, setMinImpr] = useState(25);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.grid_container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.impressions_wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Matrix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n        data: GetAllEntries('matrix', minImpr),\n        scheme: primaryScheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.min,\n        children: \"Matrix: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n//// GETTER METHODS ////\n_s(OrderChart, \"LGoWUcB/qYWIk2ltvu19pScPJSA=\");\n_c = OrderChart;\nfunction GetAllEntries(type, props) {\n  _s2();\n  const url = Constants.API_URL_ORDER_ENTRIES;\n  const [entries, setEntries] = useState([]);\n  useEffect(() => {\n    axios.get(url).then(res => {\n      setEntries(res.data);\n    });\n  }, []);\n  return getMatrices(entries);\n}\n_s2(GetAllEntries, \"si2ZVsazrWomTuBdDT2zYRo3CE0=\");\n_c2 = GetAllEntries;\nexport default OrderChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"OrderChart\");\n$RefreshReg$(_c2, \"GetAllEntries\");","map":{"version":3,"names":["React","useState","useEffect","PieChart","Constants","styles","axios","primaryScheme","getMatrices","entries","minImpr","data","serum","K3EDTA","EDTA","map","entry","matrix","push","id","value","OrderChart","setMinImpr","grid_container","impressions_wrapper","GetAllEntries","min","type","props","url","API_URL_ORDER_ENTRIES","setEntries","get","then","res"],"sources":["G:/WW2/cbh-predictor/cbh-predictor-app/src/components/screens/chartScreen/orderGraphs.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { PieChart } from \"./charts/pieChart\";\r\nimport Constants from \"../../../utilities/Constants\";\r\nimport styles from \"./graphs.module.css\"\r\nimport axios from \"axios\";\r\n\r\nvar primaryScheme = ['#5fc431','#71d055','#83dc73','#96e890','#abf4ab','#c0ffc6','#a1e5ad','#82cc96','#62b37f','#429a6a','#188255','#429a6a','#62b37f','#82cc96','#a1e5ad','#c0ffc6','#abf4ab','#96e890','#83dc73','#71d055']\r\n\r\n//// MAPPING FUNCTIONS ////\r\nfunction getMatrices(entries, minImpr) {\r\n    const data = []\r\n    var serum = 10;\r\n    var K3EDTA = 0;\r\n    var EDTA = 10;\r\n\r\n    entries.map(function(entry){\r\n        if(entry.matrix == \"serum\") {\r\n            serum = serum + 1;\r\n        }\r\n        // switch(entries.matrix) {\r\n        //     case \"serum\":\r\n        //         serum++;\r\n        //         return\r\n        //     case \"K3EDTA plasma\":\r\n        //         K3EDTA = K3EDTA + 1;\r\n        //         return\r\n        //     case \"EDTA plasma\":\r\n        //         EDTA = EDTA + 1;\r\n        //         return\r\n        //     default:\r\n        //         return\r\n        // }\r\n    })\r\n\r\n    data.push({\r\n        id: \"serum\", \r\n        value: serum\r\n    })\r\n    data.push({\r\n        id: \"K3EDTA plasma\", \r\n        value: K3EDTA\r\n    })\r\n    data.push({\r\n        id: \"EDTA plasma\", \r\n        value: EDTA\r\n    })\r\n\r\n    return data\r\n}\r\n\r\n//// RENDER VIEW ////\r\nconst OrderChart = () => {\r\n    const [minImpr, setMinImpr] = useState(25)\r\n\r\n    return(\r\n        <div className={styles.grid_container}>\r\n            <div className={styles.impressions_wrapper}>\r\n                <h3>Matrix</h3>\r\n                <PieChart data={GetAllEntries('matrix', minImpr)} scheme={primaryScheme}/>\r\n                <div className={styles.min}>Matrix: </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//// GETTER METHODS ////\r\nfunction GetAllEntries(type, props){\r\n    const url = Constants.API_URL_ORDER_ENTRIES;\r\n    const [entries, setEntries] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(url)\r\n        .then(res => {\r\n            setEntries(res.data);\r\n        })\r\n    }, [])\r\n\r\n    return getMatrices(entries)\r\n}\r\n\r\nexport default OrderChart"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAOC,SAAS,MAAM,8BAA8B;AACpD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,IAAIC,aAAa,GAAG,CAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,CAAC;;AAE7N;AACA,SAASC,WAAW,CAACC,OAAO,EAAEC,OAAO,EAAE;EACnC,MAAMC,IAAI,GAAG,EAAE;EACf,IAAIC,KAAK,GAAG,EAAE;EACd,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,IAAI,GAAG,EAAE;EAEbL,OAAO,CAACM,GAAG,CAAC,UAASC,KAAK,EAAC;IACvB,IAAGA,KAAK,CAACC,MAAM,IAAI,OAAO,EAAE;MACxBL,KAAK,GAAGA,KAAK,GAAG,CAAC;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC,CAAC;;EAEFD,IAAI,CAACO,IAAI,CAAC;IACNC,EAAE,EAAE,OAAO;IACXC,KAAK,EAAER;EACX,CAAC,CAAC;EACFD,IAAI,CAACO,IAAI,CAAC;IACNC,EAAE,EAAE,eAAe;IACnBC,KAAK,EAAEP;EACX,CAAC,CAAC;EACFF,IAAI,CAACO,IAAI,CAAC;IACNC,EAAE,EAAE,aAAa;IACjBC,KAAK,EAAEN;EACX,CAAC,CAAC;EAEF,OAAOH,IAAI;AACf;;AAEA;AACA,MAAMU,UAAU,GAAG,MAAM;EAAA;EACrB,MAAM,CAACX,OAAO,EAAEY,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAE1C,oBACI;IAAK,SAAS,EAAEI,MAAM,CAACkB,cAAe;IAAA,uBAClC;MAAK,SAAS,EAAElB,MAAM,CAACmB,mBAAoB;MAAA,wBACvC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe,eACf,QAAC,QAAQ;QAAC,IAAI,EAAEC,aAAa,CAAC,QAAQ,EAAEf,OAAO,CAAE;QAAC,MAAM,EAAEH;MAAc;QAAA;QAAA;QAAA;MAAA,QAAE,eAC1E;QAAK,SAAS,EAAEF,MAAM,CAACqB,GAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe;IAAA;MAAA;MAAA;MAAA;IAAA;EACxC;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;;AAED;AAAA,GAdML,UAAU;AAAA,KAAVA,UAAU;AAehB,SAASI,aAAa,CAACE,IAAI,EAAEC,KAAK,EAAC;EAAA;EAC/B,MAAMC,GAAG,GAAGzB,SAAS,CAAC0B,qBAAqB;EAC3C,MAAM,CAACrB,OAAO,EAAEsB,UAAU,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZI,KAAK,CAAC0B,GAAG,CAACH,GAAG,CAAC,CACbI,IAAI,CAACC,GAAG,IAAI;MACTH,UAAU,CAACG,GAAG,CAACvB,IAAI,CAAC;IACxB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOH,WAAW,CAACC,OAAO,CAAC;AAC/B;AAAC,IAZQgB,aAAa;AAAA,MAAbA,aAAa;AActB,eAAeJ,UAAU;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}