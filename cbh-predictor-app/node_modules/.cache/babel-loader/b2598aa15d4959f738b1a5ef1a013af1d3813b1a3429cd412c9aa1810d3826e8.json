{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Desktop\\\\new-website\\\\cbh-predictor-app\\\\src\\\\components\\\\screens\\\\tableScreen\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Table from \"./bingTable\";\nimport Constants from \"../../../utilities/Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet entries;\nconst TableScreen = () => {\n  _s();\n  const [showTable, setShowTable] = useState(false);\n  const [entries, setEntries] = useState([]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => GetAllEntries(\"Bing\"),\n        className: \"btn btn-dark btn-lg w-100 h-100\",\n        children: \"Bing Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => GetAllEntries(\"Google\"),\n        className: \"btn btn-dark btn-lg w-100 h-100\",\n        children: \"Google Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => GetAllEntries(\"Lead\"),\n        className: \"btn btn-dark btn-lg w-100 h-100\",\n        children: \"Lead Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => GetAllEntries(\"Order\"),\n        className: \"btn btn-dark btn-lg w-100 h-100\",\n        children: \"Bing Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), showTable !== true && /*#__PURE__*/_jsxDEV(Table, {\n      data: entries,\n      rowsPerPage: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n  function GetAllEntries(table) {\n    const url = Constants.API_URL_BING_ENTRIES;\n    window.$activeTable = table;\n    fetch(url, {\n      method: 'GET'\n    }).then(response => response.json()).then(entriesFromServer => {\n      setEntries(entriesFromServer);\n    }).catch(error => {\n      console.log(error);\n      alert(error);\n    });\n  }\n};\n_s(TableScreen, \"CVujO8QgGk6RdIc9tXx2zs7R6SI=\");\n_c = TableScreen;\nexport default TableScreen;\nvar _c;\n$RefreshReg$(_c, \"TableScreen\");","map":{"version":3,"names":["useState","Table","Constants","entries","TableScreen","showTable","setShowTable","setEntries","GetAllEntries","table","url","API_URL_BING_ENTRIES","window","$activeTable","fetch","method","then","response","json","entriesFromServer","catch","error","console","log","alert"],"sources":["C:/Users/lucas/Desktop/new-website/cbh-predictor-app/src/components/screens/tableScreen/index.jsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport Table from \"./bingTable\"\r\nimport Constants from \"../../../utilities/Constants\";\r\n\r\nlet entries;\r\n\r\nconst TableScreen = () => {\r\n    const [showTable, setShowTable] = useState(false)\r\n    const [entries, setEntries] = useState([])\r\n\r\n    return(\r\n        <>\r\n            <div className=\"row-sm\">\r\n                <button onClick={() => GetAllEntries(\"Bing\")} className=\"btn btn-dark btn-lg w-100 h-100\">Bing Table</button>\r\n                <button onClick={() => GetAllEntries(\"Google\")} className=\"btn btn-dark btn-lg w-100 h-100\">Google Table</button>\r\n                <button onClick={() => GetAllEntries(\"Lead\")} className=\"btn btn-dark btn-lg w-100 h-100\">Lead Table</button>\r\n                <button onClick={() => GetAllEntries(\"Order\")} className=\"btn btn-dark btn-lg w-100 h-100\">Bing Table</button>\r\n            </div>\r\n            {(showTable !== true) && (\r\n                <Table data={entries} rowsPerPage={100}/>\r\n            )}\r\n        </>\r\n    )\r\n\r\n    function GetAllEntries(table) {\r\n        const url = Constants.API_URL_BING_ENTRIES;\r\n    \r\n        window.$activeTable = table;\r\n      \r\n        fetch(url, {\r\n          method: 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(entriesFromServer => {\r\n          setEntries(entriesFromServer);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          alert(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport default TableScreen"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,SAAS,MAAM,8BAA8B;AAAC;AAAA;AAErD,IAAIC,OAAO;AAEX,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACG,OAAO,EAAEI,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1C,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACnB;QAAQ,OAAO,EAAE,MAAMQ,aAAa,CAAC,MAAM,CAAE;QAAC,SAAS,EAAC,iCAAiC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eAC7G;QAAQ,OAAO,EAAE,MAAMA,aAAa,CAAC,QAAQ,CAAE;QAAC,SAAS,EAAC,iCAAiC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB,eACjH;QAAQ,OAAO,EAAE,MAAMA,aAAa,CAAC,MAAM,CAAE;QAAC,SAAS,EAAC,iCAAiC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eAC7G;QAAQ,OAAO,EAAE,MAAMA,aAAa,CAAC,OAAO,CAAE;QAAC,SAAS,EAAC,iCAAiC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5G,EACJH,SAAS,KAAK,IAAI,iBAChB,QAAC,KAAK;MAAC,IAAI,EAAEF,OAAQ;MAAC,WAAW,EAAE;IAAI;MAAA;MAAA;MAAA;IAAA,QAC1C;EAAA,gBACF;EAGP,SAASK,aAAa,CAACC,KAAK,EAAE;IAC1B,MAAMC,GAAG,GAAGR,SAAS,CAACS,oBAAoB;IAE1CC,MAAM,CAACC,YAAY,GAAGJ,KAAK;IAE3BK,KAAK,CAACJ,GAAG,EAAE;MACTK,MAAM,EAAE;IACV,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,iBAAiB,IAAI;MACzBZ,UAAU,CAACY,iBAAiB,CAAC;IAC/B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBG,KAAK,CAACH,KAAK,CAAC;IACd,CAAC,CAAC;EACN;AACJ,CAAC;AAAA,GAnCKjB,WAAW;AAAA,KAAXA,WAAW;AAqCjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}