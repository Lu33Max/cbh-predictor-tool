{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Desktop\\\\new-website\\\\cbh-predictor-app\\\\src\\\\components\\\\screens\\\\tableScreen\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Table from \"./table/table\";\nimport Constants from \"../../../utilities/Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableScreen = () => {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const [activeTable, setActiveTable] = useState('');\n  const [rows, setRows] = useState(100);\n  const handleRowChange = e => {\n    setRows(e.target.value);\n    GetAllEntries(activeTable);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [activeTable === '' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Bing Search Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => GetAllEntries('Bing'),\n          className: \"btn btn-dark btn-lg w-100 h-100\",\n          children: \"Bing Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Google Search Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => GetAllEntries('Google'),\n          className: \"btn btn-dark btn-lg w-100 h-100\",\n          children: \"Google Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => GetAllEntries('Order'),\n        className: \"btn btn-dark btn-lg w-100 h-100\",\n        children: \"Order Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), activeTable !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTable(''),\n        className: \"btn btn-dark btn-lg w-25 h-100\",\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), entries !== [] && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: rows,\n          name: \"rows\",\n          type: \"text\",\n          onChange: handleRowChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), \" Rows\", /*#__PURE__*/_jsxDEV(Table, {\n          data: entries,\n          rowsPerPage: rows,\n          type: activeTable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n  function GetAllEntries(table) {\n    setActiveTable(table);\n    var url;\n    switch (table) {\n      case 'Bing':\n        url = Constants.API_URL_BING_ENTRIES;\n        break;\n      case 'Google':\n        url = Constants.API_URL_GOOGLE_ENTRIES;\n        break;\n      case 'Lead':\n        url = Constants.API_URL_LEAD_ENTRIES;\n        break;\n      case 'Order':\n        url = Constants.API_URL_ORDER_ENTRIES;\n        break;\n      default:\n        alert(`Error: Table with name \"${table}\" does not exist`);\n        return;\n    }\n    fetch(url, {\n      method: 'GET'\n    }).then(response => response.json()).then(entriesFromServer => {\n      setEntries(entriesFromServer);\n    }).catch(error => {\n      console.log(error);\n      alert(error);\n    });\n  }\n};\n_s(TableScreen, \"Ma4r6FGvDwDd7jofDT6tO2qk0IY=\");\n_c = TableScreen;\nexport default TableScreen;\nvar _c;\n$RefreshReg$(_c, \"TableScreen\");","map":{"version":3,"names":["useState","Table","Constants","TableScreen","entries","setEntries","activeTable","setActiveTable","rows","setRows","handleRowChange","e","target","value","GetAllEntries","table","url","API_URL_BING_ENTRIES","API_URL_GOOGLE_ENTRIES","API_URL_LEAD_ENTRIES","API_URL_ORDER_ENTRIES","alert","fetch","method","then","response","json","entriesFromServer","catch","error","console","log"],"sources":["C:/Users/lucas/Desktop/new-website/cbh-predictor-app/src/components/screens/tableScreen/index.jsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport Table from \"./table/table\"\r\nimport Constants from \"../../../utilities/Constants\";\r\n\r\nconst TableScreen = () => {\r\n    const [entries, setEntries] = useState([])\r\n    const [activeTable, setActiveTable] = useState('')\r\n    const [rows, setRows] = useState(100)\r\n    \r\n    const handleRowChange = (e) => {\r\n        setRows(e.target.value)\r\n        GetAllEntries(activeTable)\r\n    };\r\n\r\n    return(\r\n        <>\r\n            {(activeTable === '') && (\r\n                <div className=\"row-sm\">\r\n                    <div>\r\n                        <h3>Bing Search Terms</h3>\r\n                        <button onClick={() => GetAllEntries('Bing')} className=\"btn btn-dark btn-lg w-100 h-100\">Bing Table</button>\r\n                    </div>\r\n                    <div>\r\n                        <h3>Google Search Terms</h3>\r\n                        <button onClick={() => GetAllEntries('Google')} className=\"btn btn-dark btn-lg w-100 h-100\">Google Table</button>\r\n                    </div>\r\n                    <div>\r\n                        <h3></h3>\r\n                    </div>\r\n                    <div>\r\n                        <h3></h3>\r\n                    </div>\r\n                    \r\n                    \r\n                    <button onClick={() => GetAllEntries('Order')} className=\"btn btn-dark btn-lg w-100 h-100\">Order Table</button>\r\n                </div>\r\n            )}\r\n            {(activeTable !== '') && (\r\n                <div className=\"row-sm\">\r\n                    <button onClick={() => setActiveTable('')} className=\"btn btn-dark btn-lg w-25 h-100\">&#60;</button>\r\n                    {(entries !== []) && (\r\n                        <div>\r\n                            <input value={rows} name=\"rows\" type=\"text\" onChange={handleRowChange}/> Rows\r\n                            <Table data={entries} rowsPerPage={rows} type={activeTable}/>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n\r\n    function GetAllEntries(table) {\r\n        setActiveTable(table);\r\n        var url;\r\n  \r\n        switch (table) {\r\n        case 'Bing':\r\n            url = Constants.API_URL_BING_ENTRIES;\r\n            break;\r\n        case 'Google':\r\n            url = Constants.API_URL_GOOGLE_ENTRIES;\r\n            break;\r\n        case 'Lead':\r\n            url = Constants.API_URL_LEAD_ENTRIES;\r\n            break;\r\n        case 'Order':\r\n            url = Constants.API_URL_ORDER_ENTRIES;\r\n            break;\r\n        default:\r\n            alert(`Error: Table with name \"${table}\" does not exist`)\r\n            return;\r\n        }\r\n      \r\n        fetch(url, {\r\n          method: 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(entriesFromServer => {\r\n          setEntries(entriesFromServer);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          alert(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport default TableScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}