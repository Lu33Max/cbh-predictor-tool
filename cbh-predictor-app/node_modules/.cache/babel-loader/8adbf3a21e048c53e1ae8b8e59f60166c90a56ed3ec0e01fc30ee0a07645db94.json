{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Desktop\\\\Personal\\\\Studium\\\\3.Semester\\\\WW2\\\\CBHPredictorTool\\\\cbh-predictor\\\\cbh-predictor-app\\\\src\\\\components\\\\screens\\\\tableScreen\\\\tablescreen.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport Table from \"./table/table\";\nimport FileUploadForm from \"./forms/fileUploadForm\";\nimport CreateEntryForm from \"./forms/createEntryForm\";\nimport UpdateEntryForm from \"./forms/updateEntryForm\";\nimport Constants from \"../../../utilities/Constants\";\nimport styles from \"./tablescreen.module.css\";\nimport BingChart, { getData } from \"../chartScreen/bingGraphs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableScreen = () => {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const [activeTable, setActiveTable] = useState('');\n  const [showFileUpload, setShowFileUpload] = useState(false);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [showGraphs, setShowGraphs] = useState(false);\n  const [entryToUpdate, setEntryToUpdate] = useState(null);\n  const [rows, setRows] = useState(100);\n  const handleRowChange = e => {\n    setRows(e.target.value);\n    getAllEntries(activeTable);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.body,\n    children: [activeTable === '' && showFileUpload === false && showCreateForm === false && showGraphs === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Bing Search Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            getDa;\n            setShowGraphs(true);\n          },\n          className: styles.button_green,\n          children: \"Graphical Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getAllEntries('Bing'),\n          className: styles.button_green,\n          children: \"Show Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowFileUpload(true);\n            setActiveTable('Bing');\n          },\n          className: styles.button_gray,\n          children: \"Upload Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportToExcel('Bing'),\n          className: styles.button_gray,\n          children: \"Export to Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Google Search Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button_green,\n          children: \"Graphical Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getAllEntries('Google'),\n          className: styles.button_green,\n          children: \"Show Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowFileUpload(true);\n            setActiveTable('Google');\n          },\n          className: styles.button_gray,\n          children: \"Upload Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportToExcel('Google'),\n          className: styles.button_gray,\n          children: \"Export to Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Lead Entries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button_green,\n          children: \"Graphical Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getAllEntries('Lead'),\n          className: styles.button_green,\n          children: \"Show Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowFileUpload(true);\n            setActiveTable('Lead');\n          },\n          className: styles.button_gray,\n          children: \"Upload Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportToExcel('Lead'),\n          className: styles.button_gray,\n          children: \"Export to Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Order Entries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button_green,\n          children: \"Graphical Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getAllEntries('Order'),\n          className: styles.button_green,\n          children: \"Show Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowFileUpload(true);\n            setActiveTable('Order');\n          },\n          className: styles.button_gray,\n          children: \"Upload Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportToExcel('Order'),\n          className: styles.button_gray,\n          children: \"Export to Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), showFileUpload === true && /*#__PURE__*/_jsxDEV(FileUploadForm, {\n      onFileUploaded: onFileUploaded,\n      table: activeTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 44\n    }, this), showCreateForm === true && /*#__PURE__*/_jsxDEV(CreateEntryForm, {\n      onEntryCreated: onEntryCreated,\n      table: activeTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 44\n    }, this), activeTable !== '' && showFileUpload === false && showCreateForm === false && showGraphs === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [entryToUpdate === null && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveTable(''),\n          className: styles.button_backarrow,\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCreateForm(true),\n          className: styles.button_newentry,\n          children: \"Create New Entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteAllEntries(),\n          className: styles.button_deleteentries,\n          children: \"Delete All Entries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this), Object.keys(entries).length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Please upload a table to view its content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }, this), Object.keys(entries).length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          styles: styles.tableview,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            classname: styles.row,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: styles.rowInput,\n              value: rows,\n              name: \"rows\",\n              type: \"text\",\n              onChange: handleRowChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 41\n            }, this), \"  Rows\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.container,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              data: entries,\n              rowsPerPage: rows,\n              type: activeTable,\n              getAllEntries: getAllEntries,\n              deleteEntry: deleteSingleEntry,\n              updateEntry: updateEntry\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true), entryToUpdate !== null && /*#__PURE__*/_jsxDEV(UpdateEntryForm, {\n        entry: entryToUpdate,\n        table: activeTable,\n        onEntryUpdated: onEntryUpdated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true), showGraphs && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: activeTable === 'Bing' && /*#__PURE__*/_jsxDEV(BingChart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 48\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n\n  //// INTERNAL METHODS ////\n  function onFileUploaded(created) {\n    if (created) alert(`Sucessfully uploaded the file contents to \"${activeTable}\" Table.`);\n    setShowFileUpload(false);\n    setActiveTable('');\n  }\n  function onEntryCreated(created) {\n    if (created !== null) alert(`Entry succesfully created. After clicking OK, your new Entry will show up in the table below.`);\n    setShowCreateForm(false);\n    getAllEntries(activeTable);\n  }\n  function updateEntry(entry) {\n    setEntryToUpdate(entry);\n  }\n  function onEntryUpdated(updatedEntry) {\n    setEntryToUpdate(null);\n    if (updatedEntry === null) return;\n    alert(`Entry successfully updated. After clicking OK, look for the Entry in the table below to see the updates.`);\n    getAllEntries(activeTable);\n  }\n\n  //// SERVER REQUESTS ////\n  function getAllEntries(table) {\n    setActiveTable(table);\n    var url;\n    switch (table) {\n      case 'Bing':\n        url = Constants.API_URL_BING_ENTRIES;\n        break;\n      case 'Google':\n        url = Constants.API_URL_GOOGLE_ENTRIES;\n        break;\n      case 'Lead':\n        url = Constants.API_URL_LEAD_ENTRIES;\n        break;\n      case 'Order':\n        url = Constants.API_URL_ORDER_ENTRIES;\n        break;\n      default:\n        alert(`Error: Table with name \"${table}\" does not exist`);\n        return;\n    }\n    fetch(url, {\n      method: 'GET'\n    }).then(response => response.json()).then(entriesFromServer => {\n      setEntries(entriesFromServer);\n    }).catch(error => {\n      console.log(error);\n      alert(error);\n    });\n  }\n  function deleteAllEntries() {\n    var url;\n    switch (activeTable) {\n      case 'Bing':\n        url = Constants.API_URL_BING_ENTRIES;\n        break;\n      case 'Google':\n        url = Constants.API_URL_GOOGLE_ENTRIES;\n        break;\n      case 'Lead':\n        url = Constants.API_URL_LEAD_ENTRIES;\n        break;\n      case 'Order':\n        url = Constants.API_URL_ORDER_ENTRIES;\n        break;\n      default:\n        alert(`Error: Table with name \"${activeTable}\" does not exist`);\n        return;\n    }\n    fetch(url, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(responseFromServer => {\n      console.log(responseFromServer);\n      alert(`Sucessfully deleted Entries from \"${activeTable}\" Table.`);\n      getAllEntries(activeTable);\n    }).catch(error => {\n      console.log(error);\n      alert(error);\n    });\n  }\n  function deleteSingleEntry(id) {\n    var url;\n    switch (activeTable) {\n      case 'Bing':\n        url = `${Constants.API_URL_BING_ENTRIES}/${id}`;\n        break;\n      case 'Google':\n        url = `${Constants.API_URL_GOOGLE_ENTRIES}/${id}`;\n        break;\n      case 'Lead':\n        url = `${Constants.API_URL_LEAD_ENTRIES}/${id}`;\n        break;\n      case 'Order':\n        url = `${Constants.API_URL_ORDER_ENTRIES}/${id}`;\n        break;\n      default:\n        alert(`Error: Table with name \"${activeTable}\" does not exist`);\n        return;\n    }\n    fetch(url, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(responseFromServer => {\n      console.log(responseFromServer);\n    }).catch(error => {\n      console.log(error);\n      alert(error);\n    });\n    alert('Entry successfully deleted. After clicking OK, look at the table below to see your Entry disappear.');\n    getAllEntries(activeTable);\n  }\n  function exportToExcel(table) {\n    var base;\n    switch (table) {\n      case 'Bing':\n        base = Constants.API_URL_BING_ENTRIES;\n        break;\n      case 'Google':\n        base = Constants.API_URL_GOOGLE_ENTRIES;\n        break;\n      case 'Lead':\n        base = Constants.API_URL_LEAD_ENTRIES;\n        break;\n      case 'Order':\n        base = Constants.API_URL_ORDER_ENTRIES;\n        break;\n      default:\n        alert(`Error: Table with name \"${table}\" does not exist`);\n        return;\n    }\n    let instance = axios.create({\n      baseURL: base\n    });\n    let options = {\n      url: 'ExportToExcel',\n      method: 'GET',\n      responseType: 'blob'\n    };\n    return instance.request(options).then(response => {\n      let filename = response.headers['content-disposition'].split(';').find(n => n.includes('filename=')).replace('filename=', '').trim();\n      let url = window.URL.createObjectURL(new Blob([response.data]));\n      saveAs(url, filename);\n    });\n  }\n};\n_s(TableScreen, \"0H86RHgaJKdbjlx9sze5hsWHTqM=\");\n_c = TableScreen;\nexport default TableScreen;\nvar _c;\n$RefreshReg$(_c, \"TableScreen\");","map":{"version":3,"names":["useState","axios","saveAs","Table","FileUploadForm","CreateEntryForm","UpdateEntryForm","Constants","styles","BingChart","getData","TableScreen","entries","setEntries","activeTable","setActiveTable","showFileUpload","setShowFileUpload","showCreateForm","setShowCreateForm","showGraphs","setShowGraphs","entryToUpdate","setEntryToUpdate","rows","setRows","handleRowChange","e","target","value","getAllEntries","body","getDa","button_green","button_gray","exportToExcel","table","onFileUploaded","onEntryCreated","button_backarrow","button_newentry","deleteAllEntries","button_deleteentries","Object","keys","length","tableview","row","rowInput","container","deleteSingleEntry","updateEntry","onEntryUpdated","created","alert","entry","updatedEntry","url","API_URL_BING_ENTRIES","API_URL_GOOGLE_ENTRIES","API_URL_LEAD_ENTRIES","API_URL_ORDER_ENTRIES","fetch","method","then","response","json","entriesFromServer","catch","error","console","log","responseFromServer","id","base","instance","create","baseURL","options","responseType","request","filename","headers","split","find","n","includes","replace","trim","window","URL","createObjectURL","Blob","data"],"sources":["C:/Users/lucas/Desktop/Personal/Studium/3.Semester/WW2/CBHPredictorTool/cbh-predictor/cbh-predictor-app/src/components/screens/tableScreen/tablescreen.jsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport axios from \"axios\";\r\nimport { saveAs } from \"file-saver\"\r\nimport Table from \"./table/table\"\r\nimport FileUploadForm from \"./forms/fileUploadForm\"\r\nimport CreateEntryForm from \"./forms/createEntryForm\"\r\nimport UpdateEntryForm from \"./forms/updateEntryForm\"\r\nimport Constants from \"../../../utilities/Constants\"\r\nimport styles from \"./tablescreen.module.css\"\r\n\r\nimport BingChart, { getData } from \"../chartScreen/bingGraphs\";\r\n\r\n\r\nconst TableScreen = () => {\r\n    const [entries, setEntries] = useState([])\r\n    const [activeTable, setActiveTable] = useState('')\r\n    const [showFileUpload, setShowFileUpload] = useState(false)\r\n    const [showCreateForm, setShowCreateForm] = useState(false)\r\n    const [showGraphs, setShowGraphs] = useState(false)\r\n    const [entryToUpdate, setEntryToUpdate ] = useState(null)\r\n    const [rows, setRows] = useState(100)\r\n    \r\n    const handleRowChange = (e) => {\r\n        setRows(e.target.value)\r\n        getAllEntries(activeTable)\r\n    };\r\n\r\n    return(\r\n        <div className={styles.body}>\r\n            {(activeTable === '' && showFileUpload === false && showCreateForm === false && showGraphs === false) && (\r\n                <div>\r\n                    <div>\r\n                        <h3>Bing Search Terms</h3>\r\n                        <button onClick={() => {getDa; setShowGraphs(true);}} className={styles.button_green}>Graphical Analysis</button>\r\n                        <button onClick={() => getAllEntries('Bing')} className={styles.button_green}>Show Table</button>\r\n                        <button onClick={() => {setShowFileUpload(true); setActiveTable('Bing');}} className={styles.button_gray}>Upload Excel File</button>\r\n                        <button onClick={() => exportToExcel('Bing')} className={styles.button_gray}>Export to Excel File</button>\r\n                    </div>\r\n                    <div className={styles.table}>\r\n                        <h3>Google Search Terms</h3>\r\n                        <button className={styles.button_green}>Graphical Analysis</button>\r\n                        <button onClick={() => getAllEntries('Google')} className={styles.button_green}>Show Table</button>\r\n                        <button onClick={() => {setShowFileUpload(true); setActiveTable('Google');}} className={styles.button_gray}>Upload Excel File</button>\r\n                        <button onClick={() => exportToExcel('Google')} className={styles.button_gray}>Export to Excel File</button>\r\n                    </div>\r\n                    <div className={styles.table}>\r\n                        <h3>Lead Entries</h3>\r\n                        <button className={styles.button_green}>Graphical Analysis</button>\r\n                        <button onClick={() => getAllEntries('Lead')} className={styles.button_green}>Show Table</button>\r\n                        <button onClick={() => {setShowFileUpload(true); setActiveTable('Lead');}} className={styles.button_gray}>Upload Excel File</button>\r\n                        <button onClick={() => exportToExcel('Lead')} className={styles.button_gray}>Export to Excel File</button>\r\n                    </div>\r\n                    <div className={styles.table}>\r\n                        <h3>Order Entries</h3>\r\n                        <button className={styles.button_green}>Graphical Analysis</button>\r\n                        <button onClick={() => getAllEntries('Order')} className={styles.button_green}>Show Table</button>\r\n                        <button onClick={() => {setShowFileUpload(true); setActiveTable('Order');}} className={styles.button_gray}>Upload Excel File</button>\r\n                        <button onClick={() => exportToExcel('Order')} className={styles.button_gray}>Export to Excel File</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {(showFileUpload === true) && (<FileUploadForm onFileUploaded={onFileUploaded} table={activeTable}/>)}\r\n            {(showCreateForm === true) && (<CreateEntryForm onEntryCreated={onEntryCreated} table={activeTable}/> )}\r\n            {(activeTable !== '' && showFileUpload === false && showCreateForm === false && showGraphs === false) && (\r\n                <>\r\n                    {(entryToUpdate === null) && (\r\n                        <>\r\n                            <button onClick={() => setActiveTable('')} className={styles.button_backarrow}>&#60;</button>\r\n                            <button onClick={() => setShowCreateForm(true)} className={styles.button_newentry}>Create New Entry</button>\r\n                            <button onClick={() => deleteAllEntries()} className={styles.button_deleteentries}>Delete All Entries</button>\r\n                            {(Object.keys(entries).length === 0) && (\r\n                                <div>\r\n                                    Please upload a table to view its content\r\n                                </div>\r\n                            )}\r\n                            {(Object.keys(entries).length !== 0) && (\r\n                                <div styles={styles.tableview}>\r\n                                    <div classname={styles.row}>\r\n                                        <input className={styles.rowInput} value={rows} name=\"rows\" type=\"text\" onChange={handleRowChange}/>  Rows\r\n                                    </div>\r\n                                    <div className={styles.container}>\r\n                                        <Table data={entries} rowsPerPage={rows} type={activeTable} getAllEntries={getAllEntries} deleteEntry={deleteSingleEntry} updateEntry={updateEntry}/>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                    {(entryToUpdate !== null) && <UpdateEntryForm entry={entryToUpdate} table={activeTable} onEntryUpdated={onEntryUpdated}/>}\r\n                </>\r\n            )}\r\n            {(showGraphs) && (\r\n                <>\r\n                    {activeTable === 'Bing' && <BingChart/>}\r\n                </>\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n\r\n    //// INTERNAL METHODS ////\r\n    function onFileUploaded(created){\r\n        if(created) alert(`Sucessfully uploaded the file contents to \"${activeTable}\" Table.`)\r\n        setShowFileUpload(false)\r\n        setActiveTable('')\r\n    }\r\n    function onEntryCreated(created){\r\n        if (created !== null) alert(`Entry succesfully created. After clicking OK, your new Entry will show up in the table below.`);\r\n        setShowCreateForm(false)\r\n        getAllEntries(activeTable);\r\n    }\r\n    function updateEntry(entry){\r\n        setEntryToUpdate(entry)\r\n    }\r\n    function onEntryUpdated(updatedEntry){\r\n        setEntryToUpdate(null);\r\n        if (updatedEntry === null) return;\r\n        alert(`Entry successfully updated. After clicking OK, look for the Entry in the table below to see the updates.`);\r\n        getAllEntries(activeTable);\r\n      }\r\n\r\n    //// SERVER REQUESTS ////\r\n    function getAllEntries(table){\r\n        setActiveTable(table);\r\n        var url;\r\n  \r\n        switch (table) {\r\n        case 'Bing':\r\n            url = Constants.API_URL_BING_ENTRIES;\r\n            break;\r\n        case 'Google':\r\n            url = Constants.API_URL_GOOGLE_ENTRIES;\r\n            break;\r\n        case 'Lead':\r\n            url = Constants.API_URL_LEAD_ENTRIES;\r\n            break;\r\n        case 'Order':\r\n            url = Constants.API_URL_ORDER_ENTRIES;\r\n            break;\r\n        default:\r\n            alert(`Error: Table with name \"${table}\" does not exist`)\r\n            return;\r\n        }\r\n      \r\n        fetch(url, {\r\n          method: 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(entriesFromServer => {\r\n          setEntries(entriesFromServer);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          alert(error);\r\n        });\r\n        \r\n    }\r\n\r\n    function deleteAllEntries(){\r\n        var url;\r\n    \r\n        switch (activeTable) {\r\n          case 'Bing':\r\n            url = Constants.API_URL_BING_ENTRIES;\r\n            break;\r\n          case 'Google':\r\n            url = Constants.API_URL_GOOGLE_ENTRIES;\r\n            break;\r\n          case 'Lead':\r\n            url = Constants.API_URL_LEAD_ENTRIES;\r\n            break;\r\n          case 'Order':\r\n            url = Constants.API_URL_ORDER_ENTRIES;\r\n            break;\r\n          default:\r\n            alert(`Error: Table with name \"${activeTable}\" does not exist`)\r\n            return;\r\n        }\r\n    \r\n        fetch(url, {\r\n          method: 'DELETE'\r\n        })\r\n        .then(response => response.json())\r\n        .then(responseFromServer => {\r\n          console.log(responseFromServer);\r\n          alert(`Sucessfully deleted Entries from \"${activeTable}\" Table.`);\r\n          getAllEntries(activeTable)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          alert(error);\r\n        });\r\n    }\r\n\r\n    function deleteSingleEntry(id){\r\n        var url;\r\n\r\n        switch (activeTable) {\r\n        case 'Bing':\r\n            url = `${Constants.API_URL_BING_ENTRIES}/${id}`;\r\n            break;\r\n        case 'Google':\r\n            url = `${Constants.API_URL_GOOGLE_ENTRIES}/${id}`;\r\n            break;\r\n        case 'Lead':\r\n            url = `${Constants.API_URL_LEAD_ENTRIES}/${id}`;\r\n            break;\r\n        case 'Order':\r\n            url = `${Constants.API_URL_ORDER_ENTRIES}/${id}`;\r\n            break;\r\n        default:\r\n            alert(`Error: Table with name \"${activeTable}\" does not exist`)\r\n            return;\r\n        }\r\n\r\n        fetch(url, {\r\n            method: 'DELETE'\r\n        })\r\n        .then(response => response.json())\r\n        .then(responseFromServer => {\r\n            console.log(responseFromServer);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            alert(error);\r\n        });\r\n\r\n        alert('Entry successfully deleted. After clicking OK, look at the table below to see your Entry disappear.');\r\n        getAllEntries(activeTable);\r\n    }\r\n\r\n    function exportToExcel(table) {\r\n        var base;\r\n\r\n        switch (table) {\r\n        case 'Bing':\r\n            base = Constants.API_URL_BING_ENTRIES;\r\n            break;\r\n        case 'Google':\r\n            base = Constants.API_URL_GOOGLE_ENTRIES;\r\n            break;\r\n        case 'Lead':\r\n            base = Constants.API_URL_LEAD_ENTRIES;\r\n            break;\r\n        case 'Order':\r\n            base = Constants.API_URL_ORDER_ENTRIES;\r\n            break;\r\n        default:\r\n            alert(`Error: Table with name \"${table}\" does not exist`)\r\n            return;\r\n        }\r\n\r\n        let instance = axios.create({  baseURL: base });  \r\n        let options = { \r\n          url: 'ExportToExcel',\r\n          method: 'GET',\r\n          responseType: 'blob'\r\n        };\r\n        return instance.request(options)\r\n          .then(response => { \r\n            let filename = response.headers['content-disposition']\r\n              .split(';')\r\n              .find((n) => n.includes('filename='))\r\n              .replace('filename=', '')\r\n              .trim();      \r\n            let url = window.URL\r\n              .createObjectURL(new Blob([response.data]));     \r\n            saveAs(url, filename);    \r\n        });\r\n    }\r\n}\r\n\r\nexport default TableScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}