{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Desktop\\\\new-website\\\\cbh-predictor-app\\\\src\\\\components\\\\screens\\\\tableScreen\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Table from \"./table/table\";\nimport FileUploadForm from \"./forms/fileUploadForm\";\nimport CreateEntryForm from \"./forms/createEntryForm\";\nimport Constants from \"../../../utilities/Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableScreen = () => {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const [activeTable, setActiveTable] = useState('');\n  const [showFileUpload, setShowFileUpload] = useState(false);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [rows, setRows] = useState(100);\n  const handleRowChange = e => {\n    setRows(e.target.value);\n    getAllEntries(activeTable);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [activeTable === '' && showFileUpload === false && showCreateForm === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Bing Search Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getAllEntries('Bing'),\n          className: \"btn btn-dark btn-lg w-100 h-100\",\n          children: \"Show Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowFileUpload(true);\n            setActiveTable('Bing');\n          },\n          className: \"btn btn-secondary btn-lg w-50 h-100\",\n          children: \"Upload Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportToExcel('Bing'),\n          className: \"btn btn-secondary btn-lg w-50 h-100\",\n          children: \"Export to Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Google Search Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getAllEntries('Google'),\n          className: \"btn btn-dark btn-lg w-100 h-100\",\n          children: \"Show Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowFileUpload(true);\n            setActiveTable('Google');\n          },\n          className: \"btn btn-secondary btn-lg w-50 h-100\",\n          children: \"Upload Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportToExcel('Google'),\n          className: \"btn btn-secondary btn-lg w-50 h-100\",\n          children: \"Export to Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Lead Entries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getAllEntries('Lead'),\n          className: \"btn btn-dark btn-lg w-100 h-100\",\n          children: \"Show Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowFileUpload(true);\n            setActiveTable('Lead');\n          },\n          className: \"btn btn-secondary btn-lg w-50 h-100\",\n          children: \"Upload Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportToExcel('Lead'),\n          className: \"btn btn-secondary btn-lg w-50 h-100\",\n          children: \"Export to Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Order Entries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getAllEntries('Order'),\n          className: \"btn btn-dark btn-lg w-100 h-100\",\n          children: \"Show Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowFileUpload(true);\n            setActiveTable('Order');\n          },\n          className: \"btn btn-secondary btn-lg w-50 h-100\",\n          children: \"Upload Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportToExcel('Order'),\n          className: \"btn btn-secondary btn-lg w-50 h-100\",\n          children: \"Export to Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), showFileUpload === true && /*#__PURE__*/_jsxDEV(FileUploadForm, {\n      onFileUploaded: onFileUploaded,\n      table: activeTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 44\n    }, this), showCreateForm === true && /*#__PURE__*/_jsxDEV(CreateEntryForm, {\n      onEntryCreated: onEntryCreated,\n      table: activeTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 44\n    }, this), activeTable !== '' && showFileUpload === false && showCreateForm === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTable(''),\n        className: \"btn btn-dark btn-lg w-25 h-100\",\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCreateForm(true),\n        className: \"btn btn-success btn-lg w-50 h-100\",\n        children: \"Create New Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteAllEntries(),\n        className: \"btn btn-danger btn-lg w-25 h-100\",\n        children: \"Delete All Entries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), Object.keys(entries).length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Please upload a table to view its content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this), Object.keys(entries).length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"mt-3\",\n          value: rows,\n          name: \"rows\",\n          type: \"text\",\n          onChange: handleRowChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), \" Rows\", /*#__PURE__*/_jsxDEV(Table, {\n          data: entries,\n          rowsPerPage: rows,\n          type: activeTable,\n          getAllEntries: getAllEntries,\n          deleteEntry: deleteSingleEntry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n\n  //// INTERNAL METHODS ////\n  function onFileUploaded(created) {\n    if (created) alert(`Sucessfully uploaded the file contents to \"${activeTable}\" Table.`);\n    setShowFileUpload(false);\n    setActiveTable('');\n  }\n  function onEntryCreated(created) {\n    if (created !== null) alert(`Entry succesfully created. After clicking OK, your new Entry will show up in the table below.`);\n    setShowCreateForm(false);\n    getAllEntries(activeTable);\n  }\n\n  //// SERVER REQUESTS ////\n  function getAllEntries(table) {\n    setActiveTable(table);\n    var url;\n    switch (table) {\n      case 'Bing':\n        url = Constants.API_URL_BING_ENTRIES;\n        break;\n      case 'Google':\n        url = Constants.API_URL_GOOGLE_ENTRIES;\n        break;\n      case 'Lead':\n        url = Constants.API_URL_LEAD_ENTRIES;\n        break;\n      case 'Order':\n        url = Constants.API_URL_ORDER_ENTRIES;\n        break;\n      default:\n        alert(`Error: Table with name \"${table}\" does not exist`);\n        return;\n    }\n    fetch(url, {\n      method: 'GET'\n    }).then(response => response.json()).then(entriesFromServer => {\n      setEntries(entriesFromServer);\n    }).catch(error => {\n      console.log(error);\n      alert(error);\n    });\n  }\n  function deleteAllEntries() {\n    var url;\n    switch (activeTable) {\n      case 'Bing':\n        url = Constants.API_URL_BING_ENTRIES;\n        break;\n      case 'Google':\n        url = Constants.API_URL_GOOGLE_ENTRIES;\n        break;\n      case 'Lead':\n        url = Constants.API_URL_LEAD_ENTRIES;\n        break;\n      case 'Order':\n        url = Constants.API_URL_ORDER_ENTRIES;\n        break;\n      default:\n        alert(`Error: Table with name \"${activeTable}\" does not exist`);\n        return;\n    }\n    fetch(url, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(responseFromServer => {\n      console.log(responseFromServer);\n      alert(`Sucessfully deleted Entries from \"${activeTable}\" Table.`);\n      getAllEntries(activeTable);\n    }).catch(error => {\n      console.log(error);\n      alert(error);\n    });\n  }\n  function deleteSingleEntry(id) {\n    var url;\n    switch (activeTable) {\n      case 'Bing':\n        url = `${Constants.API_URL_BING_ENTRIES}/${id}`;\n        break;\n      case 'Google':\n        url = `${Constants.API_URL_GOOGLE_ENTRIES}/${id}`;\n        break;\n      case 'Lead':\n        url = `${Constants.API_URL_LEAD_ENTRIES}/${id}`;\n        break;\n      case 'Order':\n        url = `${Constants.API_URL_ORDER_ENTRIES}/${id}`;\n        break;\n      default:\n        alert(`Error: Table with name \"${activeTable}\" does not exist`);\n        return;\n    }\n    fetch(url, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(responseFromServer => {\n      console.log(responseFromServer);\n    }).catch(error => {\n      console.log(error);\n      alert(error);\n    });\n    alert('Entry successfully deleted. After clicking OK, look at the table below to see your Entry disappear.');\n    getAllEntries(activeTable);\n  }\n  function exportToExcel(table) {\n    var url;\n    switch (table) {\n      case 'Bing':\n        url = `${Constants.API_URL_BING_ENTRIES}/ExportToExcel`;\n        break;\n      case 'Google':\n        url = `${Constants.API_URL_GOOGLE_ENTRIES}/ExportToExcel`;\n        break;\n      case 'Lead':\n        url = `${Constants.API_URL_LEAD_ENTRIES}/ExportToExcel`;\n        break;\n      case 'Order':\n        url = `${Constants.API_URL_ORDER_ENTRIES}/ExportToExcel`;\n        break;\n      default:\n        alert(`Error: Table with name \"${table}\" does not exist`);\n        return;\n    }\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(res => {\n      return res.blob();\n    }).catch(error => {\n      console.log(error);\n    });\n    alert(`Successfully exported the ${table} table.`);\n  }\n};\n_s(TableScreen, \"Y2wj744vU83udYBi/skmwGtDQ0g=\");\n_c = TableScreen;\nexport default TableScreen;\nvar _c;\n$RefreshReg$(_c, \"TableScreen\");","map":{"version":3,"names":["useState","Table","FileUploadForm","CreateEntryForm","Constants","TableScreen","entries","setEntries","activeTable","setActiveTable","showFileUpload","setShowFileUpload","showCreateForm","setShowCreateForm","rows","setRows","handleRowChange","e","target","value","getAllEntries","exportToExcel","onFileUploaded","onEntryCreated","deleteAllEntries","Object","keys","length","deleteSingleEntry","created","alert","table","url","API_URL_BING_ENTRIES","API_URL_GOOGLE_ENTRIES","API_URL_LEAD_ENTRIES","API_URL_ORDER_ENTRIES","fetch","method","then","response","json","entriesFromServer","catch","error","console","log","responseFromServer","id","headers","res","blob"],"sources":["C:/Users/lucas/Desktop/new-website/cbh-predictor-app/src/components/screens/tableScreen/index.jsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport Table from \"./table/table\"\r\nimport FileUploadForm from \"./forms/fileUploadForm\";\r\nimport CreateEntryForm from \"./forms/createEntryForm\";\r\nimport Constants from \"../../../utilities/Constants\";\r\n\r\nconst TableScreen = () => {\r\n    const [entries, setEntries] = useState([])\r\n    const [activeTable, setActiveTable] = useState('')\r\n    const [showFileUpload, setShowFileUpload] = useState(false)\r\n    const [showCreateForm, setShowCreateForm] = useState(false)\r\n    const [rows, setRows] = useState(100)\r\n    \r\n    const handleRowChange = (e) => {\r\n        setRows(e.target.value)\r\n        getAllEntries(activeTable)\r\n    };\r\n\r\n    return(\r\n        <>\r\n            {(activeTable === '' && showFileUpload === false && showCreateForm === false) && (\r\n                <div className=\"row-sm\">\r\n                    <div>\r\n                        <h3>Bing Search Terms</h3>\r\n                        <button onClick={() => getAllEntries('Bing')} className=\"btn btn-dark btn-lg w-100 h-100\">Show Table</button>\r\n                        <button onClick={() => {setShowFileUpload(true); setActiveTable('Bing');}} className=\"btn btn-secondary btn-lg w-50 h-100\">Upload Excel File</button>\r\n                        <button onClick={() => exportToExcel('Bing')} className=\"btn btn-secondary btn-lg w-50 h-100\">Export to Excel File</button>\r\n                    </div>\r\n                    <div>\r\n                        <h3>Google Search Terms</h3>\r\n                        <button onClick={() => getAllEntries('Google')} className=\"btn btn-dark btn-lg w-100 h-100\">Show Table</button>\r\n                        <button onClick={() => {setShowFileUpload(true); setActiveTable('Google');}} className=\"btn btn-secondary btn-lg w-50 h-100\">Upload Excel File</button>\r\n                        <button onClick={() => exportToExcel('Google')} className=\"btn btn-secondary btn-lg w-50 h-100\">Export to Excel File</button>\r\n                    </div>\r\n                    <div>\r\n                        <h3>Lead Entries</h3>\r\n                        <button onClick={() => getAllEntries('Lead')} className=\"btn btn-dark btn-lg w-100 h-100\">Show Table</button>\r\n                        <button onClick={() => {setShowFileUpload(true); setActiveTable('Lead');}} className=\"btn btn-secondary btn-lg w-50 h-100\">Upload Excel File</button>\r\n                        <button onClick={() => exportToExcel('Lead')} className=\"btn btn-secondary btn-lg w-50 h-100\">Export to Excel File</button>\r\n                    </div>\r\n                    <div>\r\n                        <h3>Order Entries</h3>\r\n                        <button onClick={() => getAllEntries('Order')} className=\"btn btn-dark btn-lg w-100 h-100\">Show Table</button>\r\n                        <button onClick={() => {setShowFileUpload(true); setActiveTable('Order');}} className=\"btn btn-secondary btn-lg w-50 h-100\">Upload Excel File</button>\r\n                        <button onClick={() => exportToExcel('Order')} className=\"btn btn-secondary btn-lg w-50 h-100\">Export to Excel File</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {(showFileUpload === true) && (<FileUploadForm onFileUploaded={onFileUploaded} table={activeTable}/>)}\r\n            {(showCreateForm === true) && (<CreateEntryForm onEntryCreated={onEntryCreated} table={activeTable}/> )}\r\n            {(activeTable !== '' && showFileUpload === false && showCreateForm === false) && (\r\n                <div className=\"row-sm\">\r\n                    <button onClick={() => setActiveTable('')} className=\"btn btn-dark btn-lg w-25 h-100\">&#60;</button>\r\n                    <button onClick={() => setShowCreateForm(true)} className=\"btn btn-success btn-lg w-50 h-100\">Create New Entry</button>\r\n                    <button onClick={() => deleteAllEntries()} className=\"btn btn-danger btn-lg w-25 h-100\">Delete All Entries</button>\r\n                    {(Object.keys(entries).length === 0) && (\r\n                        <div>\r\n                            Please upload a table to view its content\r\n                        </div>\r\n                    )}\r\n                    {(Object.keys(entries).length !== 0) && (\r\n                        <div>\r\n                            <input className=\"mt-3\" value={rows} name=\"rows\" type=\"text\" onChange={handleRowChange}/> Rows\r\n                            <Table data={entries} rowsPerPage={rows} type={activeTable} getAllEntries={getAllEntries} deleteEntry={deleteSingleEntry}/>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n\r\n    //// INTERNAL METHODS ////\r\n    function onFileUploaded(created){\r\n        if(created) alert(`Sucessfully uploaded the file contents to \"${activeTable}\" Table.`)\r\n        setShowFileUpload(false)\r\n        setActiveTable('')\r\n    }\r\n    function onEntryCreated(created){\r\n        if (created !== null) alert(`Entry succesfully created. After clicking OK, your new Entry will show up in the table below.`);\r\n        setShowCreateForm(false)\r\n        getAllEntries(activeTable);\r\n    }\r\n\r\n    //// SERVER REQUESTS ////\r\n    function getAllEntries(table){\r\n        setActiveTable(table);\r\n        var url;\r\n  \r\n        switch (table) {\r\n        case 'Bing':\r\n            url = Constants.API_URL_BING_ENTRIES;\r\n            break;\r\n        case 'Google':\r\n            url = Constants.API_URL_GOOGLE_ENTRIES;\r\n            break;\r\n        case 'Lead':\r\n            url = Constants.API_URL_LEAD_ENTRIES;\r\n            break;\r\n        case 'Order':\r\n            url = Constants.API_URL_ORDER_ENTRIES;\r\n            break;\r\n        default:\r\n            alert(`Error: Table with name \"${table}\" does not exist`)\r\n            return;\r\n        }\r\n      \r\n        fetch(url, {\r\n          method: 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(entriesFromServer => {\r\n          setEntries(entriesFromServer);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          alert(error);\r\n        });\r\n    }\r\n\r\n    function deleteAllEntries(){\r\n        var url;\r\n    \r\n        switch (activeTable) {\r\n          case 'Bing':\r\n            url = Constants.API_URL_BING_ENTRIES;\r\n            break;\r\n          case 'Google':\r\n            url = Constants.API_URL_GOOGLE_ENTRIES;\r\n            break;\r\n          case 'Lead':\r\n            url = Constants.API_URL_LEAD_ENTRIES;\r\n            break;\r\n          case 'Order':\r\n            url = Constants.API_URL_ORDER_ENTRIES;\r\n            break;\r\n          default:\r\n            alert(`Error: Table with name \"${activeTable}\" does not exist`)\r\n            return;\r\n        }\r\n    \r\n        fetch(url, {\r\n          method: 'DELETE'\r\n        })\r\n        .then(response => response.json())\r\n        .then(responseFromServer => {\r\n          console.log(responseFromServer);\r\n          alert(`Sucessfully deleted Entries from \"${activeTable}\" Table.`);\r\n          getAllEntries(activeTable)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          alert(error);\r\n        });\r\n    }\r\n\r\n    function deleteSingleEntry(id){\r\n        var url;\r\n\r\n        switch (activeTable) {\r\n        case 'Bing':\r\n            url = `${Constants.API_URL_BING_ENTRIES}/${id}`;\r\n            break;\r\n        case 'Google':\r\n            url = `${Constants.API_URL_GOOGLE_ENTRIES}/${id}`;\r\n            break;\r\n        case 'Lead':\r\n            url = `${Constants.API_URL_LEAD_ENTRIES}/${id}`;\r\n            break;\r\n        case 'Order':\r\n            url = `${Constants.API_URL_ORDER_ENTRIES}/${id}`;\r\n            break;\r\n        default:\r\n            alert(`Error: Table with name \"${activeTable}\" does not exist`)\r\n            return;\r\n        }\r\n\r\n        fetch(url, {\r\n            method: 'DELETE'\r\n        })\r\n        .then(response => response.json())\r\n        .then(responseFromServer => {\r\n            console.log(responseFromServer);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            alert(error);\r\n        });\r\n\r\n        alert('Entry successfully deleted. After clicking OK, look at the table below to see your Entry disappear.');\r\n        getAllEntries(activeTable);\r\n    }\r\n\r\n    function exportToExcel(table){\r\n        var url;\r\n\r\n        switch (table) {\r\n        case 'Bing':\r\n            url = `${Constants.API_URL_BING_ENTRIES}/ExportToExcel`;\r\n            break;\r\n        case 'Google':\r\n            url = `${Constants.API_URL_GOOGLE_ENTRIES}/ExportToExcel`;\r\n            break;\r\n        case 'Lead':\r\n            url = `${Constants.API_URL_LEAD_ENTRIES}/ExportToExcel`;\r\n            break;\r\n        case 'Order':\r\n            url = `${Constants.API_URL_ORDER_ENTRIES}/ExportToExcel`;\r\n            break;\r\n        default:\r\n            alert(`Error: Table with name \"${table}\" does not exist`)\r\n            return;\r\n        }\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: { 'content-type': 'application/json' }\r\n            })\r\n            .then(res => {return res.blob()})\r\n            .catch(error =>\r\n            {\r\n                console.log(error)\r\n            });\r\n\r\n        alert(`Successfully exported the ${table} table.`);\r\n    }\r\n}\r\n\r\nexport default TableScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}